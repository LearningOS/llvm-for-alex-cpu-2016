#ifndef LLVM_LIB_TARGET_ALEX_INSTPRINTER_ALEXINSTPRINTER_H
#define LLVM_LIB_TARGET_ALEX_INSTPRINTER_ALEXINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
// These enumeration declarations were orignally in AlexInstrInfo.h but
// had to be moved here to avoid circular dependencies between
// LLVMAlexCodeGen and LLVMAlexAsmPrinter.

    class TargetMachine;

    class AlexInstPrinter : public MCInstPrinter {
    public:
        AlexInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                        const MCRegisterInfo &MRI);

        // Autogenerated by tblgen.
        void printInstruction(const MCInst *MI, raw_ostream &O);
        static const char *getRegisterName(unsigned RegNo);

        void printRegName(raw_ostream &OS, unsigned RegNo) const override;
        void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                       const MCSubtargetInfo &STI) override;

        bool printAliasInstr(const MCInst *MI, raw_ostream &OS);
//        void printCustomAliasOperand(const MCInst *MI, unsigned OpIdx,
//                                     unsigned PrintMethodIdx, raw_ostream &O);

    private:
        void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);

        //void printUnsignedImm(const MCInst *MI, int opNum, raw_ostream &O);
        void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);

 //       void printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O);
    };
} // end namespace llvm

#endif